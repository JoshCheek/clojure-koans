#!/usr/bin/env ruby -n

# Output hilighter for the Clojure koans:
#   https://github.com/functional-koans/clojure-koans
# written against git commit
#   9b3efbb0268794c6f5e5516589bb17ed78000602

# Screenshot of what this does is in resources/hilight.png

# gsub
BEGIN {
  filenames          = {}
  prev_filename      = nil
  cwd                = ENV['PWD'].chomp("/") + "/"
  saw_relative_path  = false
  relative_path      = 'src/koans/'

  def redraw(filenames)
    print "\e[H\e[2J"
    filenames.each_with_index do |(name, status), i|
      nocolor = "\e[0m"
      case status
      when :pass    then mark = "\e[32mâˆš"
      when :fail    then mark = "\e[31mx"
      when :pending then mark = "\e[33m?"
      else raise "Not a status: #{status.inspect}"
      end
      puts "#{mark}  #{name}#{nocolor}"
    end
  end
}


# Clear screen when we start
if $. == 1
  print "\e[H\e[2J"
  next
end

# make all absolute paths relative
gsub cwd, ''

# Evaluating the list of files
if ~/^Considering\s+(.*\.clj)/
  filename                 = $1.sub relative_path, ""
  filenames[prev_filename] = :pass if prev_filename
  filenames[filename]      = :pending
  prev_filename            = filename
  redraw filenames
  next
else
  prev_filename = nil
end

# Found a failure
if ~/meditate upon (.*\.clj)/
  filename = $1.strip.sub relative_path, ""
  filenames[filename] = :fail
  redraw filenames
  next
end

# Separator
if ~/^-+$/
  puts
  puts
  next
end

# Error notification
if ~/assertion failed/i
  next
end

# Highlight the failed koan name
gsub /^clojure\.lang\.ExceptionInfo:\s+(.*)$/,
      "\e[41;37m \\1 \e[0m"


gsub relative_path, ""

gsub /,\s+compiling:?\(?(.*)\)$/ do
  filename, lineno, colno = $1.split ":"
  filenames[filename] = :fail
  puts "#{relative_path}\e[31m#{filename}\e[39m:\e[34m#{lineno}\e[0m"
  puts
  ''
end

print
