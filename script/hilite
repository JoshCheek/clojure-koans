#!/usr/bin/env ruby -n

# To use:
#   $ lein koan run | script/hilite
# Output hilighter for the Clojure koans:
#   https://github.com/functional-koans/clojure-koans
# written against git commit
#   9b3efbb0268794c6f5e5516589bb17ed78000602
# Screenshot of an older version:
#   https://gist.github.com/JoshCheek/32b07650aacd7de3586eddc1f9809ddc

BEGIN { print "\e[?25l" } # hide cursor
END   { print "\e[?25h" } # show cursor

BEGIN {
  filenames     = {}
  relative_path = 'src/koans/'
  koan_dir      = File.join ENV['PWD'], relative_path

  def redraw(filenames)
    print "\e[3H\e[J" # clear screen
    filenames.each_with_index do |(filename, status), i|
      case status
      when :pass    then mark = "\e[32mâˆš"
      when :fail    then mark = "\e[31mx"
      when :pending then mark = "\e[33m?"
      else raise "Not a status: #{status.inspect}"
      end
      name = filename
              .gsub(/_(.)/) { " #$1".upcase }
              .gsub(/^\d+ |\.clj$/, '')
      puts "#{mark} #{name}\e[0m"
    end
  end
}

# remove paths before filenames
gsub koan_dir, ''

# Evaluating the list of files
BEGIN { prev_filename = nil }
if ~/^Considering\s+(.*\.clj)/
  filename                 = $1
  filenames[prev_filename] = :pass if prev_filename
  filenames[filename]      = :pending
  prev_filename            = filename
  redraw filenames
  next
else
  prev_filename = nil
end

# Found a failure
if ~/meditate upon (.*\.clj)/
  filename = $1.strip
  filenames[filename] = :fail
  redraw filenames
  next
end

# Separator
if ~/^-+$/
  puts
  puts
  next
end

# Error notification
next if ~/assertion failed/i

# Highlight the failed koan name
gsub /^clojure\.lang\.ExceptionInfo:\s+(.*)$/,
      "\e[41;37m \\1 \e[0m"

# Extract and print the filename and line number
gsub /\s*\{:line\s*(\d+)\}[^(]*\(?(.*\.clj).*$/, ""
lineno, filename = $1, $2
print
if lineno && filename
  puts "", "#{relative_path}\e[31m#{filename}\e[39m:\e[34m#{lineno}\e[0m"
end

if ~/achieved.*enlightenment/
  filenames = filenames.map { |fn, status| [fn, :pass] }.to_h
  redraw filenames
  print
end
